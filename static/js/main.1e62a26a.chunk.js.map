{"version":3,"sources":["store/Context.js","store/constants.js","store/reducer.js","store/Provider.js","store/action.js","App.js","store/Hooks.js","reportWebVitals.js","index.js"],"names":["Context","createContext","SET_JOB","ADD_JOB","DELETE_JOB","UPDATE_JOB","initState","todos","todoInput","reducer","state","action","newJob","type","payload","splice","index","value","Error","Provider","children","useReducer","dispatch","setJob","addJob","deleteJob","updateJob","App","useContext","useStore","useState","edit","setEdit","editIndex","setEditIndex","focusInput","useRef","console","log","className","ref","placeholder","onChange","e","actions","target","onClick","current","focus","map","job","handleEdit","style","marginLeft","paddingLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e62a26a.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nconst Context = createContext() \r\n\r\nexport default Context","export const SET_JOB = 'set_job'\r\nexport const ADD_JOB = 'add_job'\r\nexport const DELETE_JOB = 'delete_job'\r\nexport const UPDATE_JOB = 'update_job'","\r\nimport  { ADD_JOB, SET_JOB,DELETE_JOB,UPDATE_JOB } from './constants'\r\n\r\nconst initState = {\r\n    todos : [],\r\n    todoInput : ''\r\n}\r\n\r\nconst reducer = (state,action) => {\r\n    const newJob = [...state.todos]\r\n    switch (action.type) {\r\n        case SET_JOB:\r\n            return {\r\n                ...state,\r\n                todoInput : action.payload\r\n            \r\n        }\r\n        case ADD_JOB:\r\n            return {\r\n                ...state,\r\n                todos : [...state.todos,action.payload]\r\n            }\r\n        case DELETE_JOB:\r\n            newJob.splice(action.payload,1)\r\n            return {\r\n                ...state,\r\n                todos : newJob\r\n            }    \r\n        case UPDATE_JOB :\r\n            newJob[action.payload.index] = action.payload.value\r\n            return {\r\n                ...state,\r\n                todos : newJob\r\n            }\r\n    \r\n        default:\r\n            throw new Error('Invalid action')\r\n    }\r\n}\r\n\r\nexport default reducer \r\nexport {initState}","import { useReducer } from 'react'\r\nimport Context from './Context'\r\nimport reducer,{initState} from './reducer'\r\n\r\nconst Provider = ( {children} ) => {\r\n     const [state,dispatch] = useReducer(reducer,initState)\r\n\r\n    return (\r\n        <Context.Provider value={[state,dispatch]}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Provider","import {SET_JOB,ADD_JOB,DELETE_JOB,UPDATE_JOB } from './constants'\r\n\r\nexport const setJob = (payload) => {\r\n    return{\r\n        type : SET_JOB,\r\n        payload\r\n    }\r\n} \r\n\r\nexport const addJob = (payload) => {\r\n    return{\r\n        type : ADD_JOB,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const deleteJob = (payload) => {\r\n    return{\r\n        type : DELETE_JOB,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateJob = (payload) => {\r\n    return{\r\n        type : UPDATE_JOB,\r\n        payload\r\n    }\r\n}\r\n\r\n","import { useStore,actions } from './store'\nimport { useRef,useState } from 'react'\n\nfunction App() {\n  const [state,dispatch] = useStore()\n  const {todos,todoInput} = state\n  const [edit,setEdit] = useState(false)\n  const [editIndex,setEditIndex] = useState(0)\n\n\n  const handleAddJob = () => {\n    dispatch(actions.addJob(todoInput))\n    dispatch(actions.setJob(''))\n\n    focusInput.current.focus()\n  }\n\n  const handleEdit = (job,index) => {\n    setEdit(!edit)\n    dispatch(actions.setJob(job))\n    setEditIndex(index)\n    focusInput.current.focus()\n\n  }\n\n  const handleSave = () => {\n    setEdit(!edit)\n    dispatch(actions.updateJob({\n      index : editIndex,\n      value : todoInput\n    }))\n\n    dispatch(actions.setJob(''))\n    focusInput.current.focus()\n    \n  }\n\n\n  const focusInput = useRef()\n  console.log(state)\n  \n  return (\n    <div className=\"App\">\n      <h1>Todo list From Context and Reducer</h1>\n      <input\n      ref= {focusInput}\n        value={state.todoInput}\n        placeholder=\"Enter todo...\"\n        onChange={(e) => {\n          dispatch(actions.setJob(e.target.value))\n        }}\n      />\n      {edit ? <button\n        onClick={handleSave}\n      >Save</button> \n      : \n      <button\n      onClick={handleAddJob}\n      >Add Job</button> }\n      \n      <ul>\n          {\n            todos.map((job,index) => {\n              return <li key={index}>\n                {job}\n\n                <button \n                onClick={() => {\n                  handleEdit(job,index)\n                }}\n                style={{marginLeft:30}}>\n                Edit\n                </button>\n\n                <span \n                onClick={() => {\n                  dispatch(actions.deleteJob(index))\n                }}\n                style={{paddingLeft:30}}>X</span>\n              </li>\n            } )\n          }\n        </ul> \n    </div>\n  );\n}\n\nexport default App;\n","import { useContext } from 'react'\r\nimport Context from './Context'\r\n\r\nexport const useStore = () => {\r\n    const [state,dispatch] = useContext(Context)\r\n\r\n    return(\r\n        [state,dispatch]\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreProvider } from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}